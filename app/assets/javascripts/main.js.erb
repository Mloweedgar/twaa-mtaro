$(function () {

    //var center = new L.LatLng(-6.7992, 39.2428);
    var center = new L.LatLng(-6.817523270254579, 39.25610303878784);
    var mapOptions = {
        center: center,
        zoom: 14,
        doubleClickZoom: true
    }

    //kml layer with drains
    var kmlLayer;
    var popup;
    var bDebug = true;

  /* Creating map*/
  var map = new L.Map('map_canvas', mapOptions);
  var osmAttr = 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>';
  var osm = new L.TileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{
    attribution:osmAttr
  });

  map.addLayer(osm);

  /* load KML data when zoomed */
  // map.on('zoomend moveend',function (ev) {
  //         refreshKML();
  //     }
  // );

    var refreshKML = function (type) {

      /* Styling mitaro */
        var customLayer = L.geoJson(null, {
            style: function (feature) {
                switch (feature.properties.styleUrl) {
                    case '#unclear':
                        return {color: "#dd9031", opacity: 1, weight: 1.5};
                    case '#adopted':
                        return {color: "blue", opacity: 1, weight: 1.5};
                    case '#needs_help':
                        return {color: "#de6060", opacity: 1, weight: 1.5};
                    case '#cleared':
                        return {color: "green", opacity: 1, weight: 1.5};
                }
            }
        });
        if (kmlLayer) {
            map.removeLayer(kmlLayer);
        }
    
    /* dyamically loading mitaro using the center coordinates */
    var c = map.getCenter();
    console.info("Rendering sidewalks of [%s, %s]", c.lat, c.lng)
    var url;
    if (type){
      url = 'sidewalks.kml?type='+type;
    }else{
      url = 'sidewalks.kml?lat=' + c.lat + '&lng=' + c.lng + '&r=' + (new Date()).valueOf();
    }
    showSpinner();
    
    /* Loading KML*/
    kmlLayer = omnivore.kml(url, null, customLayer).addTo(map);

      /* Loading KML*/
        kmlLayer = omnivore.kml(url, null, customLayer).addTo(map);

      /* Listens to clicks on drains*/
        kmlLayer.on('click', function (e) {

            var mtaro = e.layer.feature.properties;
            // Fetching drain info
            fetchDrainInfo(mtaro.description, e.latlng);
        });

      /*add KML layer to map*/
        map.addLayer(kmlLayer);
        hideSpinner();
    }
    
    refreshKML("all");

  /* popup Window for displaying details of Mtaro */
    function createPopup(msg, pos) {
        if (pos == null) {
            pos = map.getCenter();
        }
        popup = L.popup({maxWidth: 960})
            .setLatLng(pos)
            .setContent(msg)
            .openOn(map);
        bind(pos);
    }

    function fetchDrainInfo(gid, pos) {

        if (gid == undefined) {
            // do nothing
            map.closePopup();
            return false;
        }
        //if (bDebug) console.info(e.latLng);
        var locale = urlParam('locale');
        var dataToReturn;
        //if (bDebug) console.info(e.latLng);
        $.ajax({
          type: 'GET',
          url: '/sidewalk_claims/' + gid,
          data: {
            //'id': activeObjectId
            'locale' : locale
          },
          error: function(jqXHR) {
          },
          success: function(data) {
            //renderSocialButtons();
            createPopup(data, pos);
            hideSpinner();
          }
        });

    }
    function showSpinner() {
        $('#spinner').show();
        console.log('showing spinner');
    }

    function hideSpinner() {
        $('#spinner').hide();
    }

    function showInfoWindow() {
        $('#info_window').show();
    }

    function unmarkError(i) {
        $(i).removeClass('error');
    }

    function markError(i, e) {
        e.push(i);
        $(i).addClass('error');
    }


  /* executes javascript for recaptcha */
    function ajaxJS(data) {

        $(data).find('script').each(function () {
            $.ajax({
                url: this.src,
                dataType: "script",
                success: function () {
                }
            });
        });
    }

    /* displays sign_in form inside a popup */
    $('body').on('click', '#sign_in_link',function() {

    var locale = urlParam('locale');

        $.ajax({
            type: 'GET',
            url: '/users/sign_in',
            data: {
              'locale' : locale
            },
        success: function(msg) {

               createPopup(msg,map.getCenter());
            }

        });
        return false;
    });

  /* displays sign_up form inside a popup */
    $('body').on('click', '#sign_up_link',function() {
      var locale = urlParam('locale');

        $.ajax({
            type: 'GET',
            url: '/users/sign_up',
            data: {
              'locale' : locale
            },
            success: function(msg) {
                createPopup(msg, map.getCenter());
                ajaxJS(msg);
            }
        });
        return false;
    });

  /* signs in registered users */
    $('body').on('submit', 'form.sign_in_form', function (e) {
        i = $(e.target);
        var submitButton = $("input[type='submit']", i);
        var uemail = $('.user_email', i);
        var upwd = $('.user_password', i);
        var err_msg = $('.error_msg', i);
        var errors = [];


        e.preventDefault();
        submitButton.attr('disabled', 'disabled');
        if (!/[\w\.%\+\]+@[\w\]+\.+[\w]{2,}/.test(uemail.val())) {
            markError(uemail, errors);
        } else {
            unmarkError(uemail);
        }
        if (upwd.val().length < 6 || upwd.val().length > 20) {
            markError(upwd, errors);
        } else {
            unmarkError(upwd);
        }
        if (errors.length > 0) {
            submitButton.removeAttr('disabled');
            errors[0].focus();
        }
        else {
            $.ajax({
                type: 'POST',
                url: '/users/sign_in.json',
                data: {
                    'commit': submitButton.val(),
                    'utf8': '✓',
                    'authenticity_token': $('input[name="authenticity_token"]', i).val(),
                    'user': {
                        'email': uemail.val(),
                        'password': upwd.val(),
                        'remember_me': $('.user_remember_me', i).val()
                    }
                },
                beforeSend: function () {
                },
                error: function (jqXHR) {
                    data = $.parseJSON(jqXHR.responseText);
                    submitButton.removeAttr('disabled');
                    err_msg.html('<h2>' + data.errors.password + '</h2>');
                    popup.setContent($('#IWCONTENT')[0]);
                    uemail.focus();

                },
                success: function (data) {
                    $('#sidebar_login.radius_5').remove();
                    updateSidebar();
                    fetchDrainInfo();

                }
            });
        }

        return false;
    });


  /* signs up new users */
    $('body').on('submit', '#sign_up_form', function () {
        var submitButton = $("input[type='submit']", this);
        var uemail = $('#user_email');
        var ufname = $('#user_first_name');
        var ulname = $('#user_last_name');
        var upwd = $('#user_password');
        var upwdc = $('#user_password_confirmation');
        var errors = [];


        submitButton.attr('disabled', 'disabled');
        if (ufname.val() === '') {
            markError(ufname, errors);
        } else {
            unmarkError(ufname);
        }
        if (ulname.val() === '') {
            markError(ulname, errors);
        } else {
            unmarkError(ulname);
        }
        if (!/[\w\.%\+\]+@[\w\]+\.+[\w]{2,}/.test(uemail.val())) {
            markError(uemail, errors);
        } else {
            unmarkError(uemail);
        }
        if (upwd.val().length < 6 || upwd.val().length > 20) {
            markError(upwd, errors);
        } else {
            unmarkError(upwd);
        }
        if (upwdc.val().length < 6 || upwdc.val().length > 20) {
            markError(upwdc, errors);
        } else {
            unmarkError(upwdc);
        }
        if (errors.length > 0) {
            submitButton.removeAttr('disabled');
            errors[0].focus();
        }
        else {
            $.ajax({
                type: 'POST',
                url: '/users.json',
                data: {
                    'commit': submitButton.val(),
                    'utf8': '✓',
                    'authenticity_token': $('input[name="authenticity_token"]', this).val(),
                    'recaptcha_challenge_field': $('#recaptcha_challenge_field').val(),
                    'recaptcha_response_field': $('#recaptcha_response_field').val(),
                    'user': {
                        'email': uemail.val(),
                        'first_name': ufname.val(),
                        'last_name': ulname.val(),
                        'password': upwd.val(),
                        'password_confirmation': upwdc.val(),
                    }
                },
                beforeSend: function () {
                },
                error: function (jqXHR) {
                    data = $.parseJSON(jqXHR.responseText);
                    hideSpinner();
                    showInfoWindow();
                    submitButton.removeAttr('disabled');
                    if (data) {
                        createPopup(data.html, map.getCenter());
                        popup.setContent($('#IWCONTENT')[0]);
                        ajaxJS(data.html);
                    }

                },
                success: function (data) {
                    $('#sidebar_login.radius_5').remove();
                    updateSidebar();
                    fetchDrainInfo();
                }
            });

        }

        return false;
    });

    function updateSidebar() {
        var locale = urlParam('locale');

        $.ajax({
            type: 'GET',
            url: '/sidebar',
            dataType: 'json',
            data: {
                'locale':locale
            },
            error: function (jqXHR) {
                //if (bDebug) console.error(jqXHR);
            },
            success: function (data) {
                //if (bDebug) console.info(data);
                $('#username').replaceWith(data['user_badge']);
                $('#sidewalk_list').replaceWith(data['sidewalk_list']);
            }
        });
    }

  function bind(pos){

    $('#clean').on('click', function() {
      var id = $(this).attr('data-moid');
      var locale = urlParam('locale');
      showSpinner();

      $.ajax({
        type: 'POST',
        url: '/sidewalks/' + id,
        data: { 'moid': $(this).attr('data-moid'),
                'authenticity_token': AUTH_TOKEN,
                '_method': 'put',
                'shoveled': true,
                'locale': locale },
        error: function(jqXHR) {
          data = $.parseJSON(jqXHR.responseText);
          if (bDebug) console.error(data);
          hideSpinner();
        },
        success: function(data) {
          refreshKML("all");
          createPopup(data, pos);
        }
      });
      return false;
    });

    $('#unclean').on('click', function() {
      var id = $(this).attr('data-moid');
      var locale = urlParam('locale');
      showSpinner();

      $.ajax({
        type: 'POST',
        url: '/sidewalks/' + id,
        data: { 'moid': $(this).attr('data-moid'),
                'authenticity_token': AUTH_TOKEN,
                '_method': 'put',
                'shoveled': false,
                'locale': locale },
        error: function(jqXHR) {
          data = $.parseJSON(jqXHR.responseText);
          if (bDebug) console.error(data);
        },
        success: function(data) {
          refreshKML("all");
          createPopup(data, pos);
          hideSpinner();
        }
      });
      return false;
    });

  }

  function get_categories(){

    $('#cleaned').on('click', function() {
      showSpinner();
      refreshKML("cleaned");
    });
    $('#uncleaned').on('click', function() {
      showSpinner();
      refreshKML("uncleaned");
    });
    $('#need_help').on('click', function() {
      showSpinner();
      refreshKML("need_help");
    });
  }
  get_categories();

  var urlParam = function(name){
    var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
    if (results==null){
       return 'en';
    }
    else{
       return results[1] || 0;
    }
  }

});  /* end of function */
