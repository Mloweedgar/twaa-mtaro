$(function() {

  //var center = new L.LatLng(-6.7992, 39.2428);
  var center = new L.LatLng(-6.817523270254579, 39.25610303878784);
  var mapOptions = {
    center: center,
    zoom: 14,
    doubleClickZoom:false
  }

 
  /* Creating map*/
  var map = new L.Map('map_canvas',mapOptions);
  var osm = new L.TileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png');
  map.addLayer(osm);

  /* load KML data when zoomed */
  map.on('zoomend',function (ev) {
        refreshKML();
    }
  );

  var refreshKML = function () {

    /* Styling mitaro */
    var customLayer= L.geoJson(null, {
        style: function(feature) {
            switch (feature.properties.styleUrl) {
                case '#unclear': return {color: "#dd9031"};
                case '#adopted': return {color:"blue"};
                case '#needs_help': return {color:"#de6060"};
                case '#cleared': return {color:"green"};

            }
        }
    });

    /* dyamically loading mitaro using the center coordinates */
    var c = map.getCenter();
    console.info("Rendering sidewalks of [%s, %s]", c.lat, c.lng);
    var url = 'sidewalks.kml?lat=' + c.lat + '&lng=' + c.lng + '&r=' + (new Date()).valueOf();

    var drain_info;

            /* Loading KML*/
    var kmlLayer = omnivore.kml(url,null,customLayer).addTo(map);

      /* Listens to clicks on mitaro*/
    kmlLayer.on('click', function (e) {

        var mtaro = e.layer.feature.properties;
        // Fetching si
        fetchSidewalkInfo(mtaro.description, e.latlng);

    });

    /*add KML layer to map*/
    map.addLayer(kmlLayer);
  }

  /* popup Window for displaying details of Mtaro */
  function createPopup(msg, pos){
    var popup = L.popup({maxWidth : 960})
                .setLatLng(pos)
                .setContent(msg)
                .openOn(map);
  }

  function fetchSidewalkInfo(gid, pos) {
    console.log(gid);
    if (gid == undefined) {
      // do nothing
      return false;
    }
    var dataToReturn;
    //if (bDebug) console.info(e.latLng);
    $.ajax({
      type: 'GET',
      url: '/sidewalk_claims/' + gid,
      data: {
        //'id': activeObjectId
      },
      error: function(jqXHR) {
        console.log('error'+jqXHR);
      },
      success: function(data) {
        //renderSocialButtons();
        createPopup(data, pos);
      }
    });

  }


  function showSpinner() {
    $('#spinner').show();
  }
  
  function hideSpinner() {
    $('#spinner').hide();
  }

  /* executes javascript for recaptcha */
  function ajaxJS(data) {

      $(data).find('script').each(function(){
          $.ajax({
              url: this.src,
              dataType: "script",
              success: function(){ console.log('success')}
          });
      });
  }

    /* displays sign_in form inside a popup */
    $('body').on('click', '#sign_in_link',function() {
        $.ajax({
            type: 'GET',
            url: '/users/sign_in',
            success: function(msg) {

                console.info(msg);

                createPopup(msg,map.getCenter());

            }
        });
        return false;
    });


  /* displays sign_up form inside a popup */
    $('body').on('click', '#sign_up_link',function() {
        $.ajax({
            type: 'GET',
            url: '/users/sign_up',
            success: function(msg) {
                createPopup(msg, map.getCenter());
                ajaxJS(msg);
            }
        });
        return false;
    });

    /* signs in registered users */
  /*  $('body').on('submit','#sign_in_form',function(e) {
        i = $(e.target);
        var submitButton = $("input[type='submit']", i);
        var uemail = $('.user_email', i);
        var upwd = $('.user_password', i);
        var err_msg = $('.error_msg', i);
        var errors = [];

        e.preventDefault();
        $.ajax({
            type: 'POST',
            url: '/users/sign_in.json',
            data: {
                'commit': submitButton.val(),
                'utf8': '✓',
                'authenticity_token': $('input[name="authenticity_token"]', i).val(),
                'user': {
                    'email': uemail.val(),
                    'password': upwd.val(),
                    'remember_me': $('.user_remember_me', i).val()
                }
            },
            beforeSend: function() {
            },
            error: function(jqXHR) {
                console.log('sign in returned an error');
            },
            success: function(data) {
                console.log('sign in was successfull');
                $('#sidebar_login').remove();
                updateSidebar();
                fetchSidewalkInfo();
            }
        });
        return false;
    });*/

    /* collects data of a new user and submits to the backend*/
    $('body').on('submit','#sign_up_form',function() {
        var submitButton = $("input[type='submit']", this);
        var uemail = $('#user_email');
        var ufname = $('#user_first_name');
        var ulname = $('#user_last_name');
        var upwd = $('#user_password');
        var upwdc = $('#user_password_confirmation');
        var errors = [];
        $.ajax({
            type: 'POST',
            url: '/users.json',
            data: {
                'commit': submitButton.val(),
                'utf8': '✓',
                'authenticity_token': $('input[name="authenticity_token"]', this).val(),
                'recaptcha_challenge_field':	$('#recaptcha_challenge_field').val(),
                'recaptcha_response_field':	$('#recaptcha_response_field').val(),
                'user': {
                    'email': uemail.val(),
                    'first_name': ufname.val(),
                    'last_name': ulname.val(),
                    'password': upwd.val(),
                    'password_confirmation': upwdc.val(),
                }
            },
            beforeSend: function() {
            },
            error: function(jqXHR) {
                console.log('sign up has returned an error');
                data = $.parseJSON(jqXHR.responseText);
               console.warn(data);
            },
            success: function(data) {
                console.log('sign up was successful');
                console.log(data);
                $('#sidebar_login').remove();
                updateSidebar();
                fetchSidewalkInfo();
            }
        });

        return false;
    });

    function updateSidebar() {
        $.ajax({
            type: 'GET',
            url: '/sidebar',
            dataType: 'json',
            error: function(jqXHR) {
                //if (bDebug) console.error(jqXHR);
            },
            success: function(data) {
                //if (bDebug) console.info(data);
                $('#username').replaceWith(data['user_badge']);
                $('#sidewalk_list').replaceWith(data['sidewalk_list']);
            }
        });
    }

}); /* end of function */

